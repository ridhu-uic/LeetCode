{"id":820631555,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1665549387,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/820631555/","is_pending":"Not Pending","title":"Shortest Path in Binary Matrix","memory":"N/A","code":"class Solution {\npublic:\n    int shortestPathBinaryMatrix(vector<vector<int>>& grid) {\n        vector<vector<bool>> visited;\n        int m=grid.size();\n        int n=grid[0].size();\n        if(grid[0][0]==1 || grid[m-1][n-1]==1)\n            return -1;\n\n        if(m==1 && n==1 && grid[0][0]==0)\n            return 1;\n\n        visited.resize(m,vector<bool>(n,false));\n        int count=1;\n        int dr[8]={1,-1,0,0,1,1,-1,-1};\n        int dc[8]={0,0,1,-1,1,-1,1,-1};\n\n        queue <int> qr;\n        queue <int> qc;\n\n        \n        qr.push(0);\n        qc.push(0);\n\n        visited[0][0]=true;\n\n        int c_r,c_c;\n        int rr,cc;\n        int elements_in_current_level=1;\n        int elements_in_next_level=0;\n        //int count=0;\n        while(!qr.empty())\n        {\n            c_r=qr.front();\n            c_c=qc.front();\n            \n            \n\n            cout<<\"Under Queue :\"<<c_r<<\"  ,\"<<c_c<<endl;\n            int flag=0;\n            qr.pop();\n            qc.pop();\n            \n            elements_in_current_level--;\n            \n            for(int i=0;i<8;i++)\n            {\n                rr=c_r+dr[i];\n                cc=c_c+dc[i];\n\n                //cout<<\"     Under Loop  :\"<<rr<<\"   \"<<cc<<endl;\n                if(rr==m || rr==-1 || cc==n || cc==-1)\n                    continue;\n\n                if(visited[rr][cc])\n                    continue;\n\n                cout<<\"         Loop Continue : \"<<rr<<\",\"<<cc<<endl;\n                visited[rr][cc]=true;\n\n                if(grid[rr][cc]==0)\n                {\n                    elements_in_next_level++;\n                    qr.push(rr);\n                    qc.push(cc);\n                  \n                }\n\n                if(rr==m-1 && cc==n-1)\n                    return count+1;\n\n            }\n\n            \n            if(elements_in_current_level==0)\n                {\n                    elements_in_current_level=elements_in_next_level;\n                    elements_in_next_level=0;\n                    count++;\n                }\n                      \n        }\n\n        return -1;\n    }\n};\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111110000","title_slug":"shortest-path-in-binary-matrix","has_notes":false}