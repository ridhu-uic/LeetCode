{"id":848814366,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1669240330,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/848814366/","is_pending":"Not Pending","title":"Decode Ways","memory":"6.1 MB","code":"class Solution {\npublic:\n    int numDecodings(string s) {\n        // DP array to store the subproblem results\n        vector<int> dp(s.length() + 1);\n        dp[0] = 1;\n\n        // Ways to decode a string of size 1 is 1. Unless the string is '0'.\n        // '0' doesn't have a single digit decode.\n        dp[1] = s[0] == '0' ? 0 : 1;\n\n        for (size_t i = 2; i < dp.size(); i++) {\n            // Check if successful single digit decode is possible.\n            if (s[i - 1] != '0') {\n                dp[i] = dp[i - 1];\n            }\n\n            // Check if successful two digit decode is possible.\n            int two_digit = stoi(s.substr(i - 2, 2));\n            if (two_digit >= 10 && two_digit <= 26) {\n                dp[i] += dp[i - 2];\n            }\n        }\n        return dp[s.length()];\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"decode-ways","has_notes":false}