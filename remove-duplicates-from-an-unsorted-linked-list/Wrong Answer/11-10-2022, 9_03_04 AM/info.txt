{"id":840786277,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1668092584,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/840786277/","is_pending":"Not Pending","title":"Remove Duplicates From an Unsorted Linked List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteDuplicatesUnsorted(ListNode* head) {\n        int flag=0;\n        ListNode* i=head;\n        ListNode* prev=nullptr;\n        ListNode* result=nullptr;\n        ListNode* result_head=nullptr;\n        ListNode* end=nullptr;\n        /*\n        while(head!=nullptr)\n        {\n            cout<<head->val;\n            head=head->next;\n        }\n        */\n        while(head!=nullptr)\n        {\n\n            flag=0;\n            i=head->next;\n            prev=head;\n            while(i!=nullptr)\n            {\n\n                if(i->val == head->val)\n                {\n                    cout<<\"Batista\";\n                    ListNode* temp = i->next;\n                    if(!temp)\n                    {\n                        prev->next=nullptr;\n                        flag=1;\n                        i=nullptr;\n                        continue;\n                    }\n                    prev->next=i->next;\n                    i=temp;\n                    flag=1;\n\n                }\n                prev=i;\n                i=i->next;\n            }\n            cout<<\"End while\"<<endl;\n            if(!flag)\n            {\n                cout<<head->val;\n                if(!result_head)\n                {\n                    ListNode* temp = new ListNode(head->val);\n                    result_head=temp;\n                    end=result_head;\n                }\n                else\n                {\n                    ListNode* temp = new ListNode(head->val);\n                    end->next=temp;\n                    end=temp;\n                }\n            }\n            \n            head=head->next;\n\n      }\n      return result_head;\n    }\n};","compare_result":"11100111010010000000001111000000000000","title_slug":"remove-duplicates-from-an-unsorted-linked-list","has_notes":false}