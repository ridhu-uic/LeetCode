{"id":809022307,"lang":"cpp","lang_name":"C++","time":"4 months, 3 weeks","timestamp":1664199715,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/809022307/","is_pending":"Not Pending","title":"Kth Largest Element in a Stream","memory":"N/A","code":"class KthLargest {\npublic:\n    vector <int> test;\n    int k;\n    KthLargest(int k, vector<int>& nums) {\n        test=nums;\n        this->k=k;\n    }\n    \n    int add(int val) {\n        test.push_back(val);\n        priority_queue <int> p_queue_temp(test.begin(),test.end());\n\n        for(int i=1;i<k;i++)\n        {   \n            cout<<p_queue_temp.top();\n            p_queue_temp.pop();\n        }\n        \n        return p_queue_temp.top();\n\n    }\n};\n\n/**\n * Your KthLargest object will be instantiated and called as such:\n * KthLargest* obj = new KthLargest(k, nums);\n * int param_1 = obj->add(val);\n */","compare_result":"1111111110","title_slug":"kth-largest-element-in-a-stream","has_notes":false}