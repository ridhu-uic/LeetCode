{"id":807837317,"lang":"cpp","lang_name":"C++","time":"4 months, 3 weeks","timestamp":1664061652,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/807837317/","is_pending":"Not Pending","title":"Kth Largest Element in a Stream","memory":"N/A","code":"class KthLargest {\npublic:\n    int n;\n    priority_queue <int> q;\n    KthLargest(int k, vector<int>& nums) {\n        n=k;\n        for(int i=0;i<nums.size();i++)\n            q.push(nums[i]);\n    }\n    \n    int add(int val) {\n\n        q.push(val);\n        vector <int> temp;\n        for(int i=0;i<n-1;i++)\n        {\n            temp.push_back(q.top());\n            q.pop();\n        }\n        val=q.top();\n        for(int i=0;i<n-1;i++)\n        {\n            q.push(temp[i]);\n        }\n        return val;\n    }\n};\n\n/**\n * Your KthLargest object will be instantiated and called as such:\n * KthLargest* obj = new KthLargest(k, nums);\n * int param_1 = obj->add(val);\n */","compare_result":"1111111110","title_slug":"kth-largest-element-in-a-stream","has_notes":false}