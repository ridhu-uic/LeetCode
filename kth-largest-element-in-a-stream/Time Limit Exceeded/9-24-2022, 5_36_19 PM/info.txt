{"id":807819764,"lang":"cpp","lang_name":"C++","time":"4 months, 3 weeks","timestamp":1664058979,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/807819764/","is_pending":"Not Pending","title":"Kth Largest Element in a Stream","memory":"N/A","code":"class KthLargest {\npublic:\n    int n;\n    vector <int> heap;\n    KthLargest(int k, vector<int>& nums) {\n        n=k;\n        heap=nums;\n        make_heap(heap.begin(),heap.end()) ;\n\n\n    }\n    \n    int add(int val) {\n\n        heap.push_back(val);\n        push_heap(heap.begin(),heap.end());\n        make_heap(heap.begin(),heap.end()) ;\n        for(int i=0;i<n;i++)\n        {\n            val=heap.front();\n            cout<<val<<\" \";\n            pop_heap(heap.begin(),heap.end()-i);    \n        }\n        cout<<endl;\n        return val;\n    }\n};\n\n/**\n * Your KthLargest object will be instantiated and called as such:\n * KthLargest* obj = new KthLargest(k, nums);\n * int param_1 = obj->add(val);\n */","compare_result":"1111111110","title_slug":"kth-largest-element-in-a-stream","has_notes":false}