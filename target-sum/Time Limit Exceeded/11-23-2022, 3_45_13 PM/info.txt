{"id":848812277,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1669239913,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/848812277/","is_pending":"Not Pending","title":"Target Sum","memory":"N/A","code":"class Solution {\npublic:\n    int findTargetSumWays(vector<int>& nums, int target) {\n        int total=accumulate(nums.begin(),nums.end(),0);\n        int n=nums.size();\n        if(total<target || target<-total)\n            return 0;\n        \n        vector<vector<int>> dp;\n        dp.resize(n+1,vector <int> (2*total+1,0));\n        for(int i=0;i<(2*total+1);i++)\n            dp[0][i]=0;\n        dp[0][total]=1;\n\n        for(int i=1;i<=n;i++)\n        {\n            for(int j=0;j<(2*total+1);j++)\n            {\n               \n                if(j+nums[i-1]<(2*total+1))\n                    {\n                        dp[i][j]=dp[i-1][j+nums[i-1]];\n                    }\n\n                if(j-nums[i-1]>=0)\n                    {\n                    dp[i][j]+=dp[i-1][j-nums[i-1]];\n\n                    }\n\n                cout<<\"i = :\"<<i<<\"j = : \"<<j<<\"  ,dp[i][j]   :\"<<dp[i][j]<<endl;\n\n            }\n        }\n        return dp[n][target+total];\n    }\n \n};","compare_result":"1111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"target-sum","has_notes":false}