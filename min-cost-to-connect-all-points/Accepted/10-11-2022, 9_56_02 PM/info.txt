{"id":820575699,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1665543362,"status":10,"status_display":"Accepted","runtime":"1374 ms","url":"/submissions/detail/820575699/","is_pending":"Not Pending","title":"Min Cost to Connect All Points","memory":"38.6 MB","code":"class Solution {\npublic:\n    deque<pair<int,pair<int,int>>>v;\n    int par[2001],n,cnt=0;\n    // DSU\n    int find_par(int r)\n    {\n         if(par[r]==r)\n            return r;\n        return par[r]=find_par(par[r]);\n    }\n    int mst()\n    {\n        int cost=0; \n          // sort the vector , it will first sort according to cost then indexes\n        sort(v.begin(),v.end());\n        while(1)\n        {\n             // a & b are the indexes of current smallest edge\n            int a=v[0].second.first;\n            int b=v[0].second.second;\n            if(find_par(a)!=find_par(b)) // same or not same representer\n            {\n                par[par[b]]=find_par(a); // make their representer same \n                cost+=v[0].first;\n                cnt++;\n            }\n            if(cnt==n-1) // formed n-1 edges\n                break;\n            v.pop_front(); // remove the smallest to access the next smallest one \n        }\n        return cost;\n    }\n    int minCostConnectPoints(vector<vector<int>>& points) {\n        n=points.size();\n        if(n==1)  // edge case \n            return 0;\n         // find distances from each pair of points\n        for(int i=0;i<points.size();i++)\n        {\n            for(int j=i+1;j<points.size();j++)\n            {\n                    int d=abs(points[i][0]-points[j][0])+abs(points[i][1]-points[j][1]);\n                    v.push_back(make_pair(d,make_pair(i,j)));\n            }\n        }\n        // make each point their own representer\n        for(int i=0;i<n;i++)\n        {\n            par[i]=i;\n        }\n        return mst();\n    }\n};\n\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"min-cost-to-connect-all-points","has_notes":false}