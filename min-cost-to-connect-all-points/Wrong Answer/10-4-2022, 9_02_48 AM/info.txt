{"id":815028292,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1664892168,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/815028292/","is_pending":"Not Pending","title":"Min Cost to Connect All Points","memory":"N/A","code":"class Solution {\npublic:\n\n    struct distance{\n        int cost;\n        map<int,int> dest;\n        map<int,int> source;\n    };\n    struct compare{\n        bool operator()(distance d1,distance d2)\n        {\n            return d1.cost>d2.cost;\n        }\n    };\n    int minCostConnectPoints(vector<vector<int>>& points) {\n        //priority_queue<distance, vector<distance>, compare> pq();\n\n        double x_centroid=0;\n        double y_centroid=0;\n        double distance=0;\n        int n=points.size();\n\n        for(int i=0;i<n;i++)\n        {\n            x_centroid=x_centroid+points[i][0];\n            y_centroid=y_centroid+points[i][1];\n        }\n        x_centroid=x_centroid/n;\n        y_centroid=y_centroid/n;\n\n        for(int i=0;i<n;i++)\n        {\n            distance=distance+sqrt(pow((points[i][0]-x_centroid),2)+pow((points[i][1]-y_centroid),2));\n        }\n\n        return ceil(distance);\n    }\n};","compare_result":"101010000000000000000000000000000000000000000000000000000000000000000000","title_slug":"min-cost-to-connect-all-points","has_notes":false}