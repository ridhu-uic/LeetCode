{"id":846039712,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1668806150,"status":10,"status_display":"Accepted","runtime":"493 ms","url":"/submissions/detail/846039712/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"12.7 MB","code":"class Solution {\npublic:\n    bool canPartition(vector<int>& nums) {\n        int sum=0;\n        \n        const int n=nums.size();\n        sort(nums.begin(),nums.end());\n        for(int i=0;i<n;i++)\n            sum=sum+nums[i];\n\n        if(sum%2==1 )\n            return false;\n        int x=sum/2;\n        vector<vector <bool>> dp;\n        dp.resize(n+1,vector<bool>(x+1));\n        for(int i=0;i<=n;i++)\n        {\n            dp[i][0]=true;\n        }\n        for(int i=1;i<=x;i++)\n            dp[0][i]=false;\n        for(int i=1;i<=n;i++)       //nums[i] is the item\n        {\n            for(int j=1;j<=x;j++)\n            {\n                if(j<nums[i-1])\n                    dp[i][j]=dp[i-1][j];\n                else\n                    dp[i][j]=dp[i-1][j] || dp[i-1][j-nums[i-1]];\n            }\n         }\n        return dp[n][x];\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-equal-subset-sum","has_notes":false}