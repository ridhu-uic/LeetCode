{"id":845940500,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1668792719,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/845940500/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"N/A","code":"class Solution {\npublic:\n    bool canPartition(vector<int>& nums) {\n        int sum=0;\n        int subsum=0;\n        const int n=nums.size();\n        sort(nums.begin(),nums.end());\n        for(int i=0;i<n;i++)\n            sum=sum+nums[i];\n\n        if(sum%2==1 )\n            return false;\n\n        vector<vector <int>> dp;\n        dp.resize(n,vector<int>(sum/2+1));\n\n        for(int i=0;i<n;i++)       // item\n        {\n            subsum+=nums[i];\n            for(int j=0;j<sum/2+1;j++)\n            {\n                if(j==0)\n                    {\n                        dp[i][j]=0;\n                        continue;\n                    }\n                else if(j<nums[i])\n                    dp[i][j]=dp[i-1][j];\n                else if(j==nums[i])\n                    {\n                        dp[i][j]=1;\n                    }\n                else\n                {\n                    if(j>subsum)\n                        dp[i][j]=0;\n                    else\n                        dp[i][j]=dp[i][j-nums[i]];\n                }\n            }\n         }\n\n\n\n        return dp[n-1][sum/2];\n    }\n};","compare_result":"11111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"partition-equal-subset-sum","has_notes":false}