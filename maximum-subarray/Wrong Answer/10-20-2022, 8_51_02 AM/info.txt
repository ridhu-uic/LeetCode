{"id":826630539,"lang":"cpp","lang_name":"C++","time":"3 months, 4 weeks","timestamp":1666273862,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/826630539/","is_pending":"Not Pending","title":"Maximum Subarray","memory":"N/A","code":"class Solution {\npublic:\n    int max3(int a,int b,int c)\n    {\n        if(a>b && a>c)\n            return a;\n        if(b>c)\n            return b;\n        return c;\n    }\n    int maxCrossSum(vector<int>& nums,int l,int mid,int h)\n    {\n        long leftSum=INT_MIN;\n        long rightSum=INT_MIN;\n        long sum=0;\n        for(int i=l;i<mid;i++)\n        {\n            sum=sum+nums[i];\n            if(sum>leftSum)\n                leftSum=sum;\n        }\n        sum=0;\n        for(int i=mid;i<=h;i++)\n        {\n            sum=sum+nums[i];\n            if(sum>rightSum)\n                rightSum=sum;\n        }\n        return max3(leftSum,rightSum,rightSum+leftSum);\n    }\n    int maxSubArray1(vector<int>& nums,int l,int h)\n    {\n        if(l>h)\n            return INT_MIN;\n        if(l==h)\n            return nums[l];\n        int mid=(l+h)/2;\n        return max3(maxSubArray1(nums,l,mid-1),maxSubArray1(nums,mid+1,h),maxCrossSum(nums,l,mid,h));\n    }\n    int maxSubArray(vector<int>& nums) {\n        int n=nums.size();\n        int l=0;\n        int h=n-1;\n\n     return maxSubArray1(nums,  l, h);   \n    }\n};","compare_result":"01111000011110000101101111111111011111111111110111111100011111111111111111011101111000111001001101010101111000110011011110100111100011011011001010010000101000100110110000010000000000000001100000000000000000010","title_slug":"maximum-subarray","has_notes":false}