{"id":836081123,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1667483979,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/836081123/","is_pending":"Not Pending","title":"Median of Two Sorted Arrays","memory":"N/A","code":"class Solution {\npublic:\n    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {\n        double m1;\n        int n1=nums1.size();\n        double m2;\n        int n2=nums2.size();\n                    if(n1+n2<=4)\n            {\n                cout<<\"here\";\n                vector <int> result;\n                int i=0;\n                int j=0;\n\n                while(i<n1 && j<n2)\n                {\n                    if(nums1[i]<nums2[j])\n                        result.push_back(nums1[i++]);\n\n                    else\n                        result.push_back(nums2[j++]);\n                }\n                while(i<n1)\n                    result.push_back(nums1[i++]);\n\n                while(j<n2)\n                    result.push_back(nums2[j++]);\n                \n                int k=n1+n2;\n                cout<<endl<<endl;\n                for(int i=0;i<n1+n2;i++)\n                    cout<<result[i]<<\"  \";\n                cout<<endl;\n                double m;\n                if(k%2==0)\n                {\n                    m=((double)result[k/2]+(double)result[k/2-1])/2;\n                    cout<<k<<\"  \"<<m;\n                }\n                else\n                {\n                    m=result[k/2];\n                }\n                return m;\n\n            }\n\n        if(n1%2==0)\n        {\n            m1=(double)(nums1[n1/2]+nums1[n1/2-1])/2;\n        }\n        else\n        {\n            m1=nums1[n1/2];\n        }\n\n        if(n2%2==0)\n        {\n            m2=(double)(nums2[n2/2]+nums2[n2/2-1])/2;\n        }\n        else\n        {\n            m2=nums2[n2/2];\n        }\n        cout<<m1<<\"    \"<<m2<<\"   \"<<(m1==m2)<<endl;\n\n\n        if(m1==m2)\n        {\n            cout<<\"am I a joke to you?\"<<endl;\n            return m1;\n        }\n        else\n        {\n            cout<<\"y me?\"<<endl;\n            if(m1>m2)\n            {\n                copy(nums1.begin(),nums1.begin()+n1/2+1,nums1.begin());\n                copy(nums2.begin()+n2/2,nums2.end(),nums2.begin());\n                return findMedianSortedArrays(nums1,  nums2);\n            }\n            else\n            {\n                copy(nums1.begin()+n1/2,nums1.end(),nums1.begin());\n                copy(nums2.begin(),nums2.begin()+n2/2+1,nums2.begin());\n                return findMedianSortedArrays(nums1,  nums2);\n            }\n        }\n        return (m1+m2)/2;\n\n\n\n    }\n};","compare_resulttitle_slug":"median-of-two-sorted-arrays","has_notes":false}