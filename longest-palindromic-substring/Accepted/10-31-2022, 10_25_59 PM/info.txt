{"id":834424311,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1667273159,"status":10,"status_display":"Accepted","runtime":"61 ms","url":"/submissions/detail/834424311/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"11.1 MB","code":"class Solution {\npublic:\n    string longestPalindrome(string s) {\n        int n=s.size();\n        int max1=0;\n        string s1;\n        string s2;\n        for(int i=0;i<n;i++)\n        {\n            int x=1;\n            while(i-x>=0 && i+x<n)\n            {\n                if(s[i-x]==s[i+x])\n                    x++;\n                else\n                    break;\n            }\n            int length_now1=1+2*(x-1);\n            if(length_now1>max1)\n            {\n            s1=s.substr(i-(x-1),1+2*(x-1));\n            cout<<\"string 1 of :\"<<i;\n            cout<<s1<<endl;\n            max1=length_now1;\n            }\n            x=i;\n            int y=i+1;\n            while(x>=0 && y<n)\n            {\n                if(s[x]==s[y])\n                    {\n                        x--;\n                        y++;\n                    }\n                else{\n                    break;\n                }\n            }\n            int length_now2=(y-x)-1;\n            if(length_now2>max1)\n            {\n            s1=s.substr(x+1,length_now2);\n            cout<<\"string 2 of :\"<<i;\n            cout<<s1<<endl;\n            max1=length_now2;\n            }                \n\n        }\n\n        return s1;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-substring","has_notes":false}